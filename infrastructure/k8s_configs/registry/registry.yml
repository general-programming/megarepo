apiVersion: v1
kind: Namespace
metadata:
  name: docker-registry
---
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: docker-registry
spec:
  clusterIP: None
  ports:
  - name: registry
    port: 5000
    targetPort: 5000
  selector:
    app: registry
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: registry
  name: registry
  namespace: docker-registry
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: registry
    spec:
      containers:
      - name: registry
        image: registry:2.6.2
        env:
        - name: REGISTRY_HTTP_SECRET
          value: af238e85-e07a-43a8-b305-16a9e6e9ba25
        volumeMounts:
        - mountPath: /var/lib/registry
          name: registry-data
        ports:
        - containerPort: 5000
      restartPolicy: Always
      volumes:
        - name: registry-data
          hostPath:
            path: /mnt/nfs/var/registry
            type: DirectoryOrCreate
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    # ingress
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    # auth
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: registry-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
    # tls
    kubernetes.io/tls-acme: 'true'
  name: registry-ingress
  namespace: docker-registry
spec:
  tls:
  - hosts:
    - registry.nepeat.com
    secretName: registry-tls
  rules:
  - host: registry.nepeat.com
    http:
      paths:
      - backend:
          serviceName: registry
          servicePort: 5000
