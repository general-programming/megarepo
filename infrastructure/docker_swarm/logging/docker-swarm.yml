version: "3.6"
services:
  grafana:
    image: grafana/grafana:main
    environment:
      GF_SERVER_ROOT_URL: https://grafana-sea.generalprogramming.org
    env_file: .env_grafana
    volumes:
      - /srv/grafana/data:/var/lib/grafana
      - /srv/grafana/log:/var/log/grafana
      - /srv/grafana/etc:/etc/grafana
    networks:
      - logging
      - publicweb
    deploy:
      labels:
        - traefik.enable=true
        - traefik.port=3000
        - traefik.docker.network=publicweb
        # Routes
        - traefik.frontend.rule=Host:grafana-sea.generalprogramming.org
        # Traefik 2
        - traefik.http.routers.grafana.rule=Host(`grafana-sea.generalprogramming.org`)
        - traefik.http.services.grafana.loadbalancer.server.port=3000
      restart_policy:
        condition: any

  prometheus:
    image: prom/prometheus
    command: --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus --storage.tsdb.max-block-duration=2h --storage.tsdb.min-block-duration=2h --web.console.libraries=/usr/share/prometheus/console_libraries --web.console.templates=/usr/share/prometheus/consoles --web.enable-lifecycle
    volumes:
      - /srv/etc/prometheus:/etc/prometheus
      - /srv/var/prometheus:/prometheus
    networks:
      - logging
    deploy:
      restart_policy:
        condition: any

  alertmanager:
    image: prom/alertmanager:main
    command: --config.file=/alertmanager/config.yml --storage.path="/data"
    volumes:
      - /srv/etc/alertmanager:/alertmanager
      - /srv/var/alertmanager:/data
    networks:
      - logging
    deploy:
      restart_policy:
        condition: any
networks:
  logging:
    driver: overlay
  publicweb:
    driver: overlay
    external: true
