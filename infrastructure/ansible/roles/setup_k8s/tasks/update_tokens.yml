- name: "K8S - Generate tokens"
  shell: 'echo $(dd if=/dev/urandom bs=128 count=1 2>/dev/null | base64 | tr -d "=+/" | dd bs=32 count=1 2>/dev/null) > {{ kube_ssl_location }}/tokens/{{ item }}'
  args:
    creates: '{{ kube_ssl_location }}/tokens/{{ item }}'
  with_items: '{{ kube_users }}'
  when: kube_root

- name: "K8S - Get tokens"
  slurp:
    src='{{ kube_ssl_location }}/tokens/{{ item }}'
  register: 'kube_tokens'
  with_items: '{{ kube_users }}'
  when: kube_root

- name: "K8S - Set zipped tokens"
  set_fact:
    zipped_tokens: "{{ kube_users | zip(kube_tokens.results) }}"

- name: "K8S - Create known_tokens"
  template:
    src: "known_tokens.j2"
    dest: "/etc/kubernetes/known_tokens.csv"
    owner: "root"
    group: "root"
    mode: "0600"
  when: kube_root

- name: "K8S - Set token fact"
  set_fact:
    kube_config_user: "kube_proxy"
    kube_config_token: "{{ kube_tokens.results[2].content | b64decode }}"
  when: kube_root

- name: "K8S - Generate kube_proxy kubeconfig"
  local_action: template src="kube_config.yaml.j2" dest="/tmp/kube-proxy-kubeconfig"
  when: kube_root

- name: "K8S - Save admin token"
  local_action: copy content="{{ kube_tokens.results[0].content | b64decode }}" dest=/tmp/k8s/admin_token
  when: kube_root

- name: "K8S - Set token fact"
  set_fact:
    kube_config_user: "kubelet"
    kube_config_token: "{{ kube_tokens.results[1].content | b64decode }}"
  when: kube_root

- name: "K8S - Generate kubelet kubeconfig"
  local_action: template src="kube_config.yaml.j2" dest="/tmp/kubelet-kubeconfig"
  when: kube_root

- name: "K8S - Upload kube_proxy kubeconfig"
  copy:
    src: "/tmp/kube-proxy-kubeconfig"
    dest: "/var/lib/kube-proxy/kubeconfig"
    owner: "root"
    group: "root"
    mode: "0600"

- name: "K8S - Upload kubelet kubeconfig"
  copy:
    src: "/tmp/kubelet-kubeconfig"
    dest: "/var/lib/kubelet/kubeconfig"
    owner: "root"
    group: "root"
    mode: "0600"
