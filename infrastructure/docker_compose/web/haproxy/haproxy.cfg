global
	maxconn 200000

	log /dev/log local0
	stats socket /tmp/haproxy_admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-tls-tickets no-sslv3

	# SSL extras
	tune.ssl.default-dh-param 2048

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
	option redispatch
	option abortonclose
	timeout queue 1m
    timeout connect 1m
	timeout client  5m
	timeout server  5m
	errorfile 400 /usr/local/etc/haproxy/errors/400.http
	errorfile 403 /usr/local/etc/haproxy/errors/403.http
	errorfile 408 /usr/local/etc/haproxy/errors/408.http
	errorfile 500 /usr/local/etc/haproxy/errors/500.http
	errorfile 502 /usr/local/etc/haproxy/errors/502.http
	errorfile 503 /usr/local/etc/haproxy/errors/503.http
	errorfile 504 /usr/local/etc/haproxy/errors/504.http
	default-server init-addr none

resolvers docker
	nameserver dnsmasq 192.168.2.2:53
	hold nx 1s
	resolve_retries 6
	hold timeout 30s
	hold refused 30s

userlist UsersForAdmin
	user nepeat insecure-password anus
	user insecure_admin insecure-password 1248ce37-3027-44c8-addf-50d7b0c87c26

frontend https-in
	bind 0.0.0.0:443 ssl crt /etc/letsencrypt/live/combined alpn h2,http/1.1
	maxconn 50000

	# Dump to nginx if we see a validation request.
	use_backend nginx-insecure if { path_beg /.well-known/acme-challenge/ }

	# Magic stats URL.
	use_backend stats if { path_beg /__stats__ }

	# VHosts!
	use_backend sentry if { hdr_beg(host) -i sentry }
	use_backend sentry if { hdr_dom(host) -i nekoj4n2voubgdm77ymc2weivsr5prqpvzfbsfaaienhwuu57wdwcwyd }
	use_backend kibana if { hdr_beg(host) -i logs }
	use_backend kibana if { hdr_beg(host) -i kibana }
	use_backend grafana if { hdr_beg(host) -i grafana }
	use_backend discourse if { hdr_beg(host) -i discourse }

	default_backend nginx-secure

frontend http-in
	bind 0.0.0.0:80
	maxconn 50000
	# Assumes we always have HTTPS at all times.
	redirect scheme https code 301

backend nginx-insecure
	option forwardfor

	server-template nginx-consul-insecure 1 _nginx_external-80._tcp.memecenter.consul check resolvers docker

backend nginx-secure
	option forwardfor

	server-template nginx-consul-secure 1 _nginx_external-443._tcp.memecenter.consul check resolvers docker ssl verify none

backend sentry
	option forwardfor
	option http-server-close
	
	timeout connect 5s
	timeout server 10s

	server-template sentry-consul 1 _sentry-web._tcp.memecenter.consul check resolvers docker

backend kibana
	option forwardfor
	server-template kibana-consul 1 _kibana._tcp.memecenter.consul check resolvers docker

backend grafana
	option forwardfor
	server-template grafana-consul 1 _grafana._tcp.memecenter.consul check resolvers docker

backend discourse
	option forwardfor
	reqadd X-Forwarded-Proto:\ https
	server-template discourse-consul 1 _discourse_web._tcp.memecenter.consul check resolvers docker

backend stats
	stats enable
	stats uri /__stats__
	stats refresh 5
